plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'by.youngliqui'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', '2024.0.0')
    set('mapstructVersion', '1.6.2')
    set('springdocVersion', '2.7.0')
    set('jwtwebtokenVersion', '0.12.6')
}

dependencies {
    /**
     * Spring
     */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    /**
     * Doc
     */
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    /**
     * Lombok
     */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /**
     * Postgres
     */
    runtimeOnly 'org.postgresql:postgresql'

    /**
     * Tests
     */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    /**
     * Liquibase
     */
    implementation 'org.liquibase:liquibase-core'

    /**
     * MapStruct
     */
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    /**
     * Kafka
     */
    implementation 'org.springframework.kafka:spring-kafka'

    /**
     * JWT
     */
    implementation "io.jsonwebtoken:jjwt:${jwtwebtokenVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
