version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181


  auth-service:
    restart: on-failure
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://users_db:5432/${AUTH_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${AUTH_USER}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_PASSWORD}
    depends_on:
      - postgres-auth-service

  book-storage-service:
    restart: on-failure
    build:
      context: ./book-storage-service
      dockerfile: Dockerfile
    ports:
      - ${BOOK_STORAGE_SERVICE_PORT}:${BOOK_STORAGE_SERVICE_PORT}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://book_storage_db:5432/${BOOK_STORAGE_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${BOOK_STORAGE_USER}
      SPRING_DATASOURCE_PASSWORD: ${BOOK_STORAGE_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      APP_CLIENTS_AUTH-SERVICE_URL: http://auth-service:8082
    depends_on:
      - postgres-book-storage-service
      - kafka

  book-tracker-service:
    restart: on-failure
    build:
      context: ./book-tracker-service
      dockerfile: Dockerfile
    ports:
      - ${BOOK_TRACKER_SERVICE_PORT}:${BOOK_TRACKER_SERVICE_PORT}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://book_tracker_db:5432/${BOOK_TRACKER_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${BOOK_TRACKER_USER}
      SPRING_DATASOURCE_PASSWORD: ${BOOK_TRACKER_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-book-tracker-service
      - kafka


  postgres-auth-service:
    container_name: users_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_DATABASE}
      POSTGRES_USER: ${AUTH_USER}
      POSTGRES_PASSWORD: ${AUTH_PASSWORD}
    ports:
      - ${POSTGRES_LOCAL_PORT_AUTH}:5432

  postgres-book-storage-service:
    container_name: book_storage_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${BOOK_STORAGE_DATABASE}
      POSTGRES_USER: ${BOOK_STORAGE_USER}
      POSTGRES_PASSWORD: ${BOOK_STORAGE_PASSWORD}
    ports:
      - ${POSTGRES_LOCAL_PORT_STORAGE}:5432

  postgres-book-tracker-service:
    container_name: book_tracker_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${BOOK_TRACKER_DATABASE}
      POSTGRES_USER: ${BOOK_TRACKER_USER}
      POSTGRES_PASSWORD: ${BOOK_TRACKER_PASSWORD}
    ports:
      - ${POSTGRES_LOCAL_PORT_TRACKER}:5432
